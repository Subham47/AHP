# -*- coding: utf-8 -*-
"""sachin.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nJjUzUsQxIIYltHpixueb8st2Ua3Pwor
"""

import csv
import pandas as pd 
import numpy as np
import random
from job import *

#from google.colab import drive
#drive.mount('/content/gdrive')# force_remount=True)

df = pd.read_csv('./mill.csv')
print()
print("Original data::")
#pd.set_option("display.max_rows", None, "display.max_columns", None)
print(df.head(10))

mean_value = df['VB'].mean()

df['VB'].fillna(value = mean_value, inplace=True)


def class_func(count):
  #random.seed(36)  
  if count == 6:
    return 1                               #'Equal'
  elif count == 7:                         
    list = [2, 3]                         #'Equal Moderate', 'Moderate Strong']
    return random.choice(list)
  elif count == 8:# and count<9:
    list = [4, 5]                          #'Strong Very Strong', 'Very Strong']
    return random.choice(list)
  else:
    list = [6, 7]                          #'Very strong Extreme', 'Extreme']
    return random.choice(list)
  #print(random.seed)
df = df[['robot_no','DOC', 'feed', 'material', 'vib_spindle', 'vib_table', 'Fire_extinguisher', 'CNC', 'time', 'VB', 'AE_table','Classification']]

count=0
value=[]
for i in range(df.shape[0]):
  df1 = df
  df1 = df1.iloc[i:i+1, :]
  a1 = df1['DOC']==1.5
  #print(a1)
  a2 = df1['feed']==0.5
  a3 = df1['material']<=4#(df['material']<=4) | df[(df['material']>=8) & (df['material']<=12)]]
  a4 = df1['vib_spindle']<=0.28
  a5 = df1['vib_table']<=0.07
  a6 = df1['Fire_extinguisher']==1
  a7 = df1['CNC']==1
  a8 = df1['time']<=26
  a9 = df1['VB']<=0.33
  a10 = df1['AE_table']<1.004229e-01
  count=0
  if a1.bool() == True:
    count+=1
  if a2.bool() == True:
    count+=1
  if a3.bool() == True:
    count+=1
  if a4.bool() == True:
    count+=1
  if a5.bool() == True:
    count+=1
  if a6.bool() == True:
    count+=1
  if a7.bool() == True:
    count+=1
  if a8.bool() == True:
    count+=1
  if a9.bool() == True:
    count+=1
  if a10.bool() == True:
    count+=1
  #print(count.dtype)
  #print(value[i])
  value = np.where(count>=6, class_func(count), 0)
  #print(df1)
  #df.iloc[i] = df1
  #df = df.drop([i], axis=0)
  #df = pd.concat([df1, df]).reset_index(drop=True)
  df.iloc[i:i+1, 11:12] = value
#value = 0

#pd.set_option("display.max_rows", None, "display.max_columns", None)
print()
print("Data after preprocessing and classification::")
print(df.head(10))



df['DOC'] = np.where(df['DOC']==1.5, 1, 0)
df['feed'] = np.where(df['feed']==0.5, 1, 0)
df['material'] = np.where(df['material']<=4, 1, 0)
df['vib_spindle'] = np.where(df['vib_spindle']<=0.28, 1, 0)
df['vib_table'] = np.where(df['vib_table']<=0.07, 1, 0)
df['time'] = np.where(df['time']<=26, 1, 0)
df['VB'] = np.where(df['VB']<=0.33, 1, 0)
df['AE_table'] = np.where(df['AE_table']<1.004229e-01, 1, 0)

#print(df)

#for i in range(df.shape[0]):
list = []
list2 = []
#list = curr_job0, curr_job1, curr_job2, curr_job3, curr_job4, curr_job5 = jobs()
list = jobs()
list2 = jobs2()
#print(list[0]['Type_of_job'])
#jobname = curr_job['Job_name']
#activity = curr_job['Type_of_job']
#material = curr_job['Material']
#print(jobname.dtypes)
sorted_df = df.sort_values(by = 'Classification', ascending=False)

print()
print("Data for priority of robots::")
#pd.set_option("display.max_rows", None, "display.max_columns", None)
print(sorted_df.head(10))
print()
#print(df)

#print(sorted_df.iloc[0]['robot_no'])

filename = "job_activity.csv"
fields = ['Robot_No.','Assigned_job','Activity']
with open(filename, 'w') as csvfile: 
        # creating a csv writer object 
    csvwriter = csv.writer(csvfile) 
        
        # writing the fields 
    csvwriter.writerow(fields)
        
    for i in range(len(list)):
        
        row = [sorted_df.iloc[i]['robot_no'], list[i]['Job_name'], list[i]['Type_of_job']]#, list[i]['Material']]
        '''rows = [[sorted_df.iloc[0]['robot_no'], curr_job0['Job_name'], curr_job0['Type_of_job'], curr_job0['Material']],
                [sorted_df.iloc[1]['robot_no'], curr_job1['Job_name'], curr_job1['Type_of_job'], curr_job1['Material']],
                [sorted_df.iloc[2]['robot_no'], curr_job2['Job_name'], curr_job2['Type_of_job'], curr_job2['Material']],
                [sorted_df.iloc[3]['robot_no'], curr_job3['Job_name'], curr_job3['Type_of_job'], curr_job3['Material']],
                [sorted_df.iloc[4]['robot_no'], curr_job4['Job_name'], curr_job4['Type_of_job'], curr_job4['Material']],
                [sorted_df.iloc[5]['robot_no'], curr_job5['Job_name'], curr_job5['Type_of_job'], curr_job5['Material']]]'''
        #print(row)
        # writing to csv file 
         
        with open(filename, 'a') as csvfile:    
            # writing the data rows 
            csvwriter.writerow(row)
            print()
            print('Present Status::Appending robot',row[0],'to',filename)
            #print(filename)
    #sorted_df = sorted_df.drop([i])
print()
job_activity_df = pd.read_csv('job_activity.csv')
print("Data of assigned robots(Activity wise)::")   
print(job_activity_df)   

filename = "job_material.csv"
fields = ['Robot_No.','Assigned_job','Material']
with open(filename, 'w') as csvfile: 
        # creating a csv writer object 
    csvwriter = csv.writer(csvfile) 
        
        # writing the fields 
    csvwriter.writerow(fields)
    j=0        
    for i in range(len(list), len(list)+len(list2)):
        row = [sorted_df.iloc[i]['robot_no'], list2[j]['Job_name'], list2[j]['Material']]
        '''rows = [[sorted_df.iloc[0]['robot_no'], curr_job0['Job_name'], curr_job0['Type_of_job'], curr_job0['Material']],
                [sorted_df.iloc[1]['robot_no'], curr_job1['Job_name'], curr_job1['Type_of_job'], curr_job1['Material']],
                [sorted_df.iloc[2]['robot_no'], curr_job2['Job_name'], curr_job2['Type_of_job'], curr_job2['Material']],
                [sorted_df.iloc[3]['robot_no'], curr_job3['Job_name'], curr_job3['Type_of_job'], curr_job3['Material']],
                [sorted_df.iloc[4]['robot_no'], curr_job4['Job_name'], curr_job4['Type_of_job'], curr_job4['Material']],
                [sorted_df.iloc[5]['robot_no'], curr_job5['Job_name'], curr_job5['Type_of_job'], curr_job5['Material']]]'''
        #print(row)
        j += 1
        # writing to csv file 
         
        with open(filename, 'a') as csvfile:    
            # writing the data rows 
            csvwriter.writerow(row)
            print()
            print('Present Status::Appending robot',row[0],'to',filename)
            #print(filename)
    #sorted_df = sorted_df.drop([i])
print()
job_material_df = pd.read_csv('job_material.csv')
print("Data of assigned robots(Material wise)::")   
print(job_material_df)
    


